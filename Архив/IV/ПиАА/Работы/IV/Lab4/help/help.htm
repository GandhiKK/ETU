<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8' />
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
      <link rel='stylesheet' href="style.css" type='text/css' />
  </head>
  
  
  <body style='background: #691A0E;'><center><table border=0 id='wrapper'>
    <tr><td colspan=2 id='headtd'>
      Лабораторная работа <span id='headdm'>№4</span>
    </td></tr>
	
<tr><td id='navtd'>	
<table border=0 width='20%'>
  <table border=0 cellpadding=1 id='restable'>
    <tr id='reshead'>
      <th><span style='font-size: 13px'><b class='canBeLong'>Навигационная панель</b><br/>
	</span></th>
    </tr>
	 <tr class='odd'><td><span class='navitem'><a href='1.htm'>Главная страница</a></span></td>
	 <tr class='odd'><td><span class='navitem'><a href='help.htm' class='current'>Алгоритм программы</a></span></td></tr>
	 <tr class='odd'><td><span class='navitem'><a href='about_graph.htm'>Работа с графом</a></span></td>
	 
	 </table>
  </td>
   </td><td id='bodytd'>	
   

<table border=0 width='100%'>
<tr><td width='100%' valign='top'>

<h1 style='padding-bottom: 14px'><center>Алгоритм работы</center></h1>
<big><big><big><big><h3>

<p>Под сетью мы будем пониматьпару S = (G, c), где G = (V,E) — произвольный
ориентированный граф, а c : E → R — функция, которая каждой дуге (v, u)
ставит в соответствие неотрицательное вещественное число c(u, v), называемое
пропускной способностью этой дуги. Множества V и E называются
соответственно множеством вершин и множеством дуг сети S</p>

<p>Алгоритм</p>

<pre>Построение максимального потока в сети.
Данные: Сеть, представленная списками инцидентности ПРЕДШ[v], ЗАПИСЬ[v],
v ∈ V , пропускные способности c[u, v], u, v ∈ V .
Результаты: Максимальный поток F[u, v], u, v ∈ V .
1. begin
2. for u ∈ V do
3. for v ∈ V do F[u, v] := 0; (*нулевой начальный поток*)
4. repeat PSA; (*построение вспомогательной бесконтурной сети*)
5. if ДЛИНА[t] = ∞ then (*поток F не является максимальным*)
6. begin MAXP SA;
(*построение максимального потока во вспомогательной сети*)
(*перенести поток из вспомогательной сети в главную*)
7. for u ∈ XV do(*XV =множество вершин вспомогательной сети*)
8. for v ∈ XV do
9. begin F[u, v] := F[u, v] + XF[u, v];
10. if F[u, v] > C[u, v] then
11. begin F[v, u] := F[v, u] − (F[u, v] − C[u, v]);
12. F[u, v] := C[u, v]
13. end
14. end
15. end (*конец фазы*)
16. until ДЛИНА[t] = ∞ (*поток F — максимальный*)
17. end</pre>

<p></p><p></p><p></p>
<p>&nbsp;&nbsp;(В. Липский. Комбинаторика для программиста. М. &laquo;Мир&raquo;, 1988).</p>

  </h3></big></big></big></big>
  </td>
  </tr>
  
   
  </body>
</html>

